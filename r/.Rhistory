leerAño <- function(año) {
datosCSV = read.csv('../scrapes/datos_{año}.csv' %>% glue(), header = TRUE)
return (datosCSV[datosCSV$Servicio == servicio,] %>% as.numeric() %>% tail(n=-2))
}
datos <- sapply(2017:2019, leerAño) %>% unlist() %>% melt()
colnames(datos) <- 'atenciones'
atenciones <- ts(datos, frequency=52, start=2017)
autoplot(atenciones[,'atenciones']) +
ggtitle('Atenciones de urgencia por enfermedades respiratorias') +
ylab('Atenciones') +
xlab('Semanas')
datos
ggseasonplot(atenciones, year.labels=TRUE, year.labels.left=TRUE) +
ylab('Atenciones') +
ggtitle('Gráfico estacional: atenciones de urgencia en {servicio}' %>% glue())
arima_at <- auto.arima(atenciones)
autoplot(arima_at)
pred_at <- forecast(arima_at, h=horizonte)
autoplot(pred_at)
ggAcf(atenciones)
ggAcf(diff(atenciones))
ggAcf(diff(log(atenciones)))
arima_at <- auto.arima(log(atenciones))
autoplot(arima_at)
pred_at <- forecast(arima_at, h=horizonte)
autoplot(pred_at)
ggAcf(diff(diff(log(atenciones))))
ggAcf(diff(diff(diff(log(atenciones)))))
?diff
ggAcf(diff(atenciones), order=2)
ggAcf(diff(atenciones, order=2))
ggAcf(diff(atenciones, lag=2))
ggAcf(diff(atenciones, lag=52))
ggAcf(diff(atenciones, lag=1))
ggAcf(diff(atenciones, lag=3))
ggAcf(diff(atenciones, lag=1))
ggAcf(diff(log(atenciones), lag=1))
ggAcf(diff(atenciones, lag=1))
ggAcf(diff(log(atenciones), lag=1))
?diff
?diff
ggAcf(diff(log(atenciones), lag=52))
ggAcf(diff(diff(log(atenciones), lag=52)))
ggAcf(diff(diff(log(atenciones), lag=52), lag=1))
autoplot(diff(diff(log(atenciones), lag=52), lag=1))
ur.kpss(atenciones)
library(urca)
ur.kpss(atenciones)
ur.kpss(atenciones) %>% summary()
ur.kpss(log(atenciones))
ur.kpss(log(atenciones) %>% diff(lag=52))
ur.kpss(atenciones)
ur.kpss(atenciones) %>% summary
ur.kpss(atenciones %>% log() %>% diff(lag=52)) %>% summary
ur.kpss(atenciones %>% log() %>% diff(lag=52)) %>% summary
ur.kpss(atenciones %>% log() %>% diff(lag=52)) %>% diff %>% summary
ur.kpss(atenciones %>% log() %>% diff(lag=52)) %>% diff) summary
ur.kpss(atenciones %>% log() %>% diff(lag=52) %>% diff) summary
ur.kpss(atenciones %>% log %>% diff(lag=52) %>% diff) summary
ur.kpss(atenciones %>% log %>% diff(lag=52) %>% diff) %>% summary
ndiffs(atenciones)
ur.kpss(atenciones)
?ndiffs
ur.kpss(atenciones)
?ur.kpss
nsdiffs(atenciones)
atenciones <- ts(datos, frequency=12, start=2017)
nsdiffs(atenciones)
atenciones <- ts(datos, frequency=42, start=2017)
nsdiffs(atenciones)
atenciones <- ts(datos, frequency=42, start=2017)
atenciones <- ts(datos, frequency=52, start=2017)
nsdiffs(atenciones)
arima_at <- auto.arima(atenciones)
autoplot(arima_at)
pred_at <- forecast(arima_at, h=horizonte)
autoplot(pred_at)
arima_at <- auto.arima(log(atenciones))
autoplot(arima_at)
pred_at <- forecast(arima_at, h=horizonte)
autoplot(pred_at)
autoplot(exp(pred_at))
autoplot(pred_at)
arima_at <- auto.arima(atenciones)
autoplot(arima_at)
pred_at <- forecast(arima_at, h=horizonte)
autoplot(pred_at)
?ar
ar(atenciones)
autoplot(ar(atenciones))
autoplot(forecast(ar(atenciones), h=horizonte))
?ar
autoplot(forecast(ar(atenciones), order=3, h=horizonte))
autoplot(forecast(ar(atenciones), order=4, h=horizonte))
autoplot(forecast(ar(atenciones), order=10, h=horizonte))
autoplot(forecast(ar(atenciones), order=1, h=horizonte))
autoplot(forecast(ar(atenciones), h=horizonte))
autoplot(forecast(ar(atenciones, order=1), h=horizonte))
autoplot(forecast(ar(atenciones, order=10), h=horizonte))
autoplot(forecast(ar(atenciones, order=1), h=horizonte))
autoplot(forecast(ar(atenciones, order=0), h=horizonte))
autoplot(forecast(ar(diff(atenciones,lag=52), order=0), h=horizonte))
autoplot(forecast(ar(diff(atenciones,lag=52)), h=horizonte))
?undiff
pronostico <- forecast(ar(diff(atenciones,lag=52)), h=horizonte)
revdiff
diffinv(forecast())
diffinv(forecast
)
?ar
ar(diff(atenciones,lag=52))
plot(atenciones + cumsum(ar(diff(atenciones,lag=52))))
pronostico <- forecast(ar(diff(atenciones,lag=52)), h=horizonte)
atenciones + cumsum(pronostico)
atenciones$values + cumsum(pronostico)
plot(cumsum(pronostico))
datos + cumsum(pronostico)
autoplot(forecast(ar(diff(atenciones,lag=52)), h=horizonte))
?ma
sma
?sma
arima_at <- auto.arima(atenciones)
autoplot(arima_at)
pred_at <- forecast(arima_at, h=horizonte)
autoplot(pred_at)
arima_at <- Arima(atenciones, )
?Arima
arima_at <- Arima(atenciones, order=c(2,52,2))
arima_at <- Arima(atenciones, order=c(2,52,1))
arima_at <- Arima(atenciones, order=c(2,52,0))
arima_at <- Arima(atenciones, order=c(2,1,0))
pred_at <- forecast(arima_at, h=horizonte)
autoplot(pred_at)
arima_at <- Arima(atenciones, order=c(1,52,0))
arima_at <- auto.arima(atenciones)
autoplot(arima_at)
pred_at <- forecast(arima_at, h=horizonte)
autoplot(pred_at)
source('C:/Users/aleja/OneDrive/Escritorio/node/deis-server/r/pronostico.R')
arima_at <- auto.arima(atenciones, seasonal=TRUE)
autoplot(arima_at)
pred_at <- forecast(arima_at, h=semanasHorizonte)
autoplot(pred_at)
arima_at <- auto.arima(atenciones, seasonal=TRUE, approximation = FALSE)
autoplot(arima_at)
pred_at <- forecast(arima_at, h=semanasHorizonte)
autoplot(pred_at)
arima_at <- auto.arima(atenciones, seasonal=TRUE, approximation = FALSE, stepwise = FALSE)
autoplot(arima_at)
pred_at <- forecast(arima_at, h=semanasHorizonte)
autoplot(pred_at)
arima_at <- auto.arima(atenciones, seasonal=TRUE, approximation=FALSE, stepwise=FALSE)
autoplot(arima_at)
pred_at <- forecast(arima_at, h=semanasHorizonte)
autoplot(pred_at)
?auto.arima
arima_at <- auto.arima(atenciones, seasonal=TRUE, approximation=FALSE, stepwise=FALSE, test='adf')
arima_at <- auto.arima(atenciones, seasonal=TRUE, approximation=FALSE, stepwise=FALSE, test='pp')
semanasHorizonte <- 36
arimaFit <- auto.arima(atenciones, seasonal=TRUE, approximation=FALSE, stepwise=FALSE, test='pp')
pronostico <- forecast(arimaFit, h=semanasHorizonte)
autoplot(pronostico)
semanasHorizonte <- 12
arimaFit <- auto.arima(atenciones, seasonal=TRUE, approximation=FALSE, stepwise=FALSE, test='pp')
pronostico <- forecast(arimaFit, h=semanasHorizonte)
autoplot(pronostico)
arimaFit <- atenciones %>% auto.arima(seasonal=TRUE, approximation=FALSE, stepwise=FALSE, test='pp')
pronostico <- arimaFit %>% forecast(h=semanasHorizonte)
autoplot(pronostico)
arimaFit <- atenciones %>% auto.arima(seasonal=TRUE, approximation=FALSE, stepwise=FALSE, test=c('pp'))
arimaFit <- atenciones %>% auto.arima(seasonal=TRUE, approximation=FALSE, stepwise=FALSE, test=c('adf'))
arimaFit <- atenciones %>% auto.arima(seasonal=TRUE, approximation=FALSE, stepwise=FALSE, test='kpss'
arimaFit <- atenciones %>% auto.arima(seasonal=TRUE, approximation=FALSE, stepwise=FALSE, test='kpss')
arimaFit <- atenciones %>% auto.arima(seasonal=TRUE, approximation=FALSE, stepwise=FALSE, test='kpss')
pronostico <- arimaFit %>% forecast(h=semanasHorizonte)
autoplot(pronostico)
atencionesStat <- atenciones %>% diff(lag=52)
atencionesStat <- atenciones %>% diff(lag=52) %>% diff()
autoplot(atencionesStat)
ggtsdisplay(atencionesStat)
atencionesStat <- atenciones %>% diff(lag=52) %>% diff() %>% diff()
ggtsdisplay(atencionesStat)
atencionesStat <- atenciones %>% diff(lag=52) %>% diff() %>% diff() %>% diff()
ggtsdisplay(atencionesStat)
atencionesStat <- atenciones %>% diff(lag=52) %>% diff()
ggtsdisplay(atencionesStat)
arimaFit <- atenciones %>% auto.arima(seasonal=TRUE, approximation=FALSE, stepwise=FALSE, test='kpss')
pronostico <- arimaFit %>% forecast(h=semanasHorizonte)
autoplot(pronostico)
pronostico
pronostico$mean
write.csv('forecast.csv', forecast$mean)
write.csv(forecast$mean, file='forecast.csv')
write.csv(pronostico$mean, file='pronostico.csv')
pronosticoDF <- as.data.frame(pronostico)
write.table(pronosticoDF, file="pronostico.csv", quote=F, sep=";", dec=",", na="", row.names=T, col.names=T)
write.table(pronosticoDF, file="pronostico.csv", quote=F, sep=";", dec=".", na="", row.names=T, col.names=T)
write.table(pronosticoDF, file="pronostico.csv", quote=F, sep=",", dec=".", na="", row.names=T, col.names=T)
write.table(pronosticoDF, file="pronostico.csv", quote=F, sep=";", dec=".", na="", row.names=T, col.names=T)
,
write.table(pronosticoDF, file="pronostico.csv", quote=F, sep=",", dec=".", na="", row.names=T, col.names=T)
arimaFit <- atenciones %>% auto.arima(seasonal=TRUE, stepwise=FALSE, test='kpss')
pronostico <- arimaFit %>% forecast(h=semanasHorizonte)
autoplot(pronostico)
approximation=FALSE,
arimaFit <- atenciones %>% auto.arima(seasonal=TRUE, approximation=FALSE, stepwise=FALSE, test='kpss')
pronostico <- arimaFit %>% forecast(h=semanasHorizonte)
autoplot(pronostico)
arimaFit <- atenciones %>% auto.arima(seasonal=TRUE, stepwise=FALSE, test='kpss')
pronostico <- arimaFit %>% forecast(h=semanasHorizonte)
autoplot(pronostico)
pronosticoDF <- as.data.frame(pronostico)
write.table(pronosticoDF, file=('{servicio}.csv' %>% glue()), quote=T, sep=",", dec=".", na="", row.names=T, col.names=T)
write.table(pronosticoDF, file=('{servicio}.csv' %>% glue()), quote=T, sep=";", dec=".", na="", row.names=T, col.names=T)
pronostico
write.table(pronosticoDF, file=('{servicio}.csv' %>% glue()), sep=",", dec=".", na="", row.names=T, col.names=T)
write.table(pronosticoDF, file=('{servicio}.csv' %>% glue()), sep=",", dec=".", na="", col.names=TRUE)
pronosticoDF <- as.data.frame(pronostico)
write.table(pronosticoDF, file=('{servicio}.csv' %>% glue()), sep=",", dec=".", na="", col.names=TRUE)
write.table(pronosticoDF, file=('{servicio}.csv' %>% glue()), sep=",", dec=".", na="", row.names=F, col.names=T)
pronosticoDF <- as.data.frame(pronostico)
write.table(pronosticoDF, file=('{servicio}.csv' %>% glue()), sep=",", dec=".", row.names=FALSE, col.names=TRUE)
write.table(pronosticoDF, file=('pronosticos/{servicio}.csv' %>% glue()), sep=",", dec=".", row.names=FALSE, col.names=TRUE)
arimaFit <- atenciones %>% auto.arima(seasonal=TRUE, stepwise=FALSE, test='kpss')
pronostico <- arimaFit %>% forecast(h=semanasHorizonte)
autoplot(pronostico)
pronosticoDF <- as.data.frame(pronostico)
write.table(pronosticoDF, file=('pronosticos/{servicio}.csv' %>% glue()), sep=",", dec=".", row.names=FALSE, col.names=TRUE)
pronosticoDF <- pronostico %>% as.data.frame()
write.table(pronosticoDF, file=('pronosticos/{servicio}.csv' %>% glue()), sep=",", dec=".", row.names=FALSE, col.names=TRUE)
archivo <- 'pronosticos/{servicio}.csv' %>% glue()
pronosticoDF <- pronostico %>% as.data.frame()
pronosticoDF %>% write.table(file=archivo, sep=",", dec=".", row.names=FALSE, col.names=TRUE)
.libPaths()
print(.libPaths())
.libPaths( c( .libPaths(), "C:/Users/aleja/OneDrive/Documentos/R/win-library/3.6") )
Sys.setlocale(category = "LC_ALL", locale = "es-ES")
?commandArgs
servicio <- if(length(args) == 0) 'Arica' else args[0]
args <- commandArgs(trailingOnly=TRUE)
servicio <- if(length(args) == 0) 'Arica' else args[0]
source('C:/Users/aleja/OneDrive/Escritorio/node/deis-server/r/pronostico.R', encoding = 'UTF-8')
source('C:/Users/aleja/OneDrive/Escritorio/node/deis-server/r/pronostico.R', encoding = 'UTF-8')
args <- commandArgs(trailingOnly=TRUE)
servicio <- if(length(args) == 0) 'Concepción' else args[2]
semanasHorizonte <- 12
leerCSV <- function(periodo) {
datosCSV = read.csv('../scrapes/datos_{periodo}.csv' %>% glue(), header=TRUE)
return (datosCSV[datosCSV$Servicio == servicio,] %>% as.numeric() %>% tail(n=-2))
}
datos <- sapply(2017:2019, leerCSV) %>% unlist() %>% melt()
colnames(datos) <- 'atenciones'
atenciones <- ts(datos, frequency=52, start=2017)
autoplot(atenciones[,'atenciones']) +
ggtitle('Atenciones de urgencia por enfermedades respiratorias') +
ylab('Atenciones') +
xlab('Semanas')
.libPaths( c( .libPaths(), "C:/Users/aleja/OneDrive/Documentos/R/win-library/3.6") )
library(dplyr)
library(ggplot2)
library(reshape)
library(forecast)
library(glue)
args <- commandArgs(trailingOnly=TRUE)
servicio <- if(length(args) == 0) 'Concepción' else args[2]
semanasHorizonte <- 12
leerCSV <- function(periodo) {
datosCSV = read.csv('../scrapes/datos_{periodo}.csv' %>% glue(), header=TRUE)
return (datosCSV[datosCSV$Servicio == servicio,] %>% as.numeric() %>% tail(n=-2))
}
datos <- sapply(2017:2019, leerCSV) %>% unlist() %>% melt()
colnames(datos) <- 'atenciones'
atenciones <- ts(datos, frequency=52, start=2017)
leerCSV <- function(periodo) {
datosCSV = read.csv('../scrapes/datos_{periodo}.csv' %>% glue(), header=TRUE)
return (datosCSV[datosCSV$Servicio == servicio,] %>% as.numeric() %>% tail(n=-2))
}
datos <- sapply(2017:2019, leerCSV) %>% unlist() %>% melt()
colnames(datos) <- 'atenciones'
atenciones <- ts(datos, frequency=52, start=2017)
autoplot(atenciones[,'atenciones']) +
ggtitle('Atenciones de urgencia por enfermedades respiratorias') +
ylab('Atenciones') +
xlab('Semanas')
datos
leerCSV <- function(periodo) {
datosCSV = '../scrapes/datos_{periodo}.csv' %>% read.csv(encoding='utf-8') %>% glue(), header=TRUE)
return (datosCSV[datosCSV$Servicio == servicio,] %>% as.numeric() %>% tail(n=-2))
}
leerCSV <- function(periodo) {
datosCSV = '../scrapes/datos_{periodo}.csv'  %>% glue() %>% read.csv(encoding='utf-8', header=TRUE)
return (datosCSV[datosCSV$Servicio == servicio,] %>% as.numeric() %>% tail(n=-2))
}
datos <- sapply(2017:2019, leerCSV) %>% unlist() %>% melt()
colnames(datos) <- 'atenciones'
atenciones <- ts(datos, frequency=52, start=2017)
autoplot(atenciones[,'atenciones']) +
ggtitle('Atenciones de urgencia por enfermedades respiratorias') +
ylab('Atenciones') +
xlab('Semanas')
?read.csv
leerCSV <- function(periodo) {
datosCSV = '../scrapes/datos_{periodo}.csv'  %>% glue() %>% read.csv(encoding='UTF-8', header=TRUE)
return (datosCSV[datosCSV$Servicio == servicio,] %>% as.numeric() %>% tail(n=-2))
}
datos <- sapply(2017:2019, leerCSV) %>% unlist() %>% melt()
colnames(datos) <- 'atenciones'
atenciones <- ts(datos, frequency=52, start=2017)
autoplot(atenciones[,'atenciones']) +
ggtitle('Atenciones de urgencia por enfermedades respiratorias') +
ylab('Atenciones') +
xlab('Semanas')
datos <- sapply(2017:2019, leerCSV) %>% unlist() %>% melt()
colnames(datos) <- 'atenciones'
atenciones <- ts(datos, frequency=52, start=2017)
autoplot(atenciones[,'atenciones']) +
ggtitle('Atenciones de urgencia por enfermedades respiratorias') +
ylab('Atenciones') +
xlab('Semanas')
ggseasonplot(atenciones, year.labels=TRUE, year.labels.left=TRUE) +
ggtitle('Gráfico estacional: atenciones de urgencia en {servicio}' %>% glue()) +
ylab('Atenciones')
gglagplot(atenciones, set.lags=c(13,26,39,52)) +
ggtitle('Lag plot: atenciones de urgencia en {servicio}' %>% glue()) +
ylab('Atenciones')
arimaFit <- atenciones %>% auto.arima(seasonal=TRUE, stepwise=FALSE, test='kpss')
pronostico <- arimaFit %>% forecast(h=semanasHorizonte)
autoplot(pronostico)
archivo <- 'pronosticos/{servicio}.csv' %>% glue()
pronosticoDF <- pronostico %>% as.data.frame()
pronosticoDF %>% write.table(file=archivo, sep=",", dec=".", row.names=FALSE, col.names=TRUE)
arimaFit <- atenciones %>% auto.arima(seasonal=TRUE, stepwise=FALSE, test='kpss')
pronostico <- arimaFit %>% forecast(h=semanasHorizonte)
autoplot(pronostico)
?auto.arima
?forecast
arimaFit <- atenciones %>% auto.arima(seasonal=TRUE, stepwise=FALSE, test='kpss')
pronostico <- arimaFit %>% forecast(h=semanasHorizonte)
autoplot(pronostico)
servicio <- if(length(args) == 0) 'Concepción' else args[2]
semanasHorizonte <- 12
leerCSV <- function(periodo) {
datosCSV = '../scrapes/datos_{periodo}.csv'  %>% glue() %>% read.csv(encoding='UTF-8', header=TRUE)
return (datosCSV[datosCSV$Servicio == servicio,] %>% as.numeric() %>% tail(n=-2))
}
datos <- sapply(2017:2019, leerCSV) %>% unlist() %>% melt()
colnames(datos) <- 'atenciones'
atenciones <- ts(datos, frequency=52, start=2017)
autoplot(atenciones[,'atenciones']) +
ggtitle('Atenciones de urgencia por enfermedades respiratorias') +
ylab('Atenciones') +
xlab('Semanas')
ggseasonplot(atenciones, year.labels=TRUE, year.labels.left=TRUE) +
ggtitle('Gráfico estacional: atenciones de urgencia en {servicio}' %>% glue()) +
ylab('Atenciones')
gglagplot(atenciones, set.lags=c(13,26,39,52)) +
ggtitle('Lag plot: atenciones de urgencia en {servicio}' %>% glue()) +
ylab('Atenciones')
arimaFit <- atenciones %>% auto.arima(seasonal=TRUE, stepwise=FALSE, test='kpss')
pronostico <- arimaFit %>% forecast(h=semanasHorizonte)
autoplot(pronostico)
arimaFit <- atenciones %>% auto.arima(seasonal=TRUE, approximation = F, stepwise=FALSE, test='kpss')
pronostico <- arimaFit %>% forecast(h=semanasHorizonte)
autoplot(pronostico)
arimaFit <- atenciones %>% auto.arima(seasonal=TRUE, stepwise=FALSE, test='kpss')
pronostico <- arimaFit %>% forecast(h=semanasHorizonte)
autoplot(pronostico)
?auto.arima
servicio <- if(length(args) == 0) 'Arica' else args[2]
semanasHorizonte <- 12
leerCSV <- function(periodo) {
datosCSV = '../scrapes/datos_{periodo}.csv'  %>% glue() %>% read.csv(encoding='UTF-8', header=TRUE)
return (datosCSV[datosCSV$Servicio == servicio,] %>% as.numeric() %>% tail(n=-2))
}
datos <- sapply(2017:2019, leerCSV) %>% unlist() %>% melt()
colnames(datos) <- 'atenciones'
atenciones <- ts(datos, frequency=52, start=2017)
autoplot(atenciones[,'atenciones']) +
ggtitle('Atenciones de urgencia por enfermedades respiratorias') +
ylab('Atenciones') +
xlab('Semanas')
ggseasonplot(atenciones, year.labels=TRUE, year.labels.left=TRUE) +
ggtitle('Gráfico estacional: atenciones de urgencia en {servicio}' %>% glue()) +
ylab('Atenciones')
gglagplot(atenciones, set.lags=c(13,26,39,52)) +
ggtitle('Lag plot: atenciones de urgencia en {servicio}' %>% glue()) +
ylab('Atenciones')
arimaFit <- atenciones %>% auto.arima(seasonal=TRUE, stepwise=FALSE, test='kpss')
pronostico <- arimaFit %>% forecast(h=semanasHorizonte)
autoplot(pronostico)
gglagplot(atenciones, set.lags=c(13,26,39,52)) +
ggtitle('Lag plot: atenciones de urgencia en {servicio}' %>% glue()) +
ylab('Atenciones')
arimaFit <- atenciones %>% auto.arima(seasonal=TRUE, stepwise=FALSE, test='kpss')
ggseasonplot(atenciones, year.labels=TRUE, year.labels.left=TRUE) +
ggtitle('Gráfico estacional: atenciones de urgencia en {servicio}' %>% glue()) +
ylab('Atenciones')
gglagplot(atenciones, set.lags=c(13,26,39,52)) +
ggtitle('Lag plot: atenciones de urgencia en {servicio}' %>% glue()) +
ylab('Atenciones')
ggseasonplot(atenciones, year.labels=TRUE, year.labels.left=TRUE) +
ggtitle('Gráfico estacional: atenciones de urgencia en {servicio}' %>% glue()) +
ylab('Atenciones')
servicio <- if(length(args) == 0) 'Metropolitano Sur' else args[2]
semanasHorizonte <- 12
leerCSV <- function(periodo) {
datosCSV = '../scrapes/datos_{periodo}.csv'  %>% glue() %>% read.csv(encoding='UTF-8', header=TRUE)
return (datosCSV[datosCSV$Servicio == servicio,] %>% as.numeric() %>% tail(n=-2))
}
datos <- sapply(2017:2019, leerCSV) %>% unlist() %>% melt()
colnames(datos) <- 'atenciones'
atenciones <- ts(datos, frequency=52, start=2017)
autoplot(atenciones[,'atenciones']) +
ggtitle('Atenciones de urgencia por enfermedades respiratorias') +
ylab('Atenciones') +
xlab('Semanas')
ggseasonplot(atenciones, year.labels=TRUE, year.labels.left=TRUE) +
ggtitle('Gráfico estacional: atenciones de urgencia en {servicio}' %>% glue()) +
ylab('Atenciones')
gglagplot(atenciones, set.lags=c(13,26,39,52)) +
ggtitle('Lag plot: atenciones de urgencia en {servicio}' %>% glue()) +
ylab('Atenciones')
ggseasonplot(atenciones, year.labels=TRUE, year.labels.left=TRUE) +
ggtitle('Gráfico estacional: atenciones de urgencia en {servicio}' %>% glue()) +
ylab('Atenciones')
servicio <- if(length(args) == 0) 'Araucanía Sur' else args[2]
semanasHorizonte <- 12
leerCSV <- function(periodo) {
datosCSV = '../scrapes/datos_{periodo}.csv'  %>% glue() %>% read.csv(encoding='UTF-8', header=TRUE)
return (datosCSV[datosCSV$Servicio == servicio,] %>% as.numeric() %>% tail(n=-2))
}
datos <- sapply(2017:2019, leerCSV) %>% unlist() %>% melt()
colnames(datos) <- 'atenciones'
atenciones <- ts(datos, frequency=52, start=2017)
autoplot(atenciones[,'atenciones']) +
ggtitle('Atenciones de urgencia por enfermedades respiratorias') +
ylab('Atenciones') +
xlab('Semanas')
ggseasonplot(atenciones, year.labels=TRUE, year.labels.left=TRUE) +
ggtitle('Gráfico estacional: atenciones de urgencia en {servicio}' %>% glue()) +
ylab('Atenciones')
arimaFit <- atenciones %>% auto.arima(seasonal=TRUE, stepwise=FALSE, test='kpss')
pronostico <- arimaFit %>% forecast(h=semanasHorizonte)
autoplot(pronostico)
semanasHorizonte <- 32
arimaFit <- atenciones %>% auto.arima(seasonal=TRUE, stepwise=FALSE, test='kpss')
pronostico <- arimaFit %>% forecast(h=semanasHorizonte)
autoplot(pronostico)
gglagplot(atenciones, set.lags=c(13,26,39,52)) +
ggtitle('Lag plot: atenciones de urgencia en {servicio}' %>% glue()) +
ylab('Atenciones')
autoplot(atenciones[,'atenciones']) +
ggtitle('Atenciones de urgencia por enfermedades respiratorias') +
ylab('Atenciones') +
xlab('Semanas')
ggseasonplot(atenciones, year.labels=TRUE, year.labels.left=TRUE) +
ggtitle('Gráfico estacional: atenciones de urgencia en {servicio}' %>% glue()) +
ylab('Atenciones')
servicio <- if(length(args) == 0) 'Metropolitano oriente' else args[2]
semanasHorizonte <- 12
leerCSV <- function(periodo) {
datosCSV = '../scrapes/datos_{periodo}.csv'  %>% glue() %>% read.csv(encoding='UTF-8', header=TRUE)
return (datosCSV[datosCSV$Servicio == servicio,] %>% as.numeric() %>% tail(n=-2))
}
datos <- sapply(2017:2019, leerCSV) %>% unlist() %>% melt()
colnames(datos) <- 'atenciones'
atenciones <- ts(datos, frequency=52, start=2017)
autoplot(atenciones[,'atenciones']) +
ggtitle('Atenciones de urgencia por enfermedades respiratorias') +
ylab('Atenciones') +
xlab('Semanas')
ggseasonplot(atenciones, year.labels=TRUE, year.labels.left=TRUE) +
ggtitle('Gráfico estacional: atenciones de urgencia en {servicio}' %>% glue()) +
ylab('Atenciones')
servicio <- if(length(args) == 0) 'Metropolitano oriente' else args[2]
semanasHorizonte <- 12
leerCSV <- function(periodo) {
datosCSV = '../scrapes/datos_{periodo}.csv'  %>% glue() %>% read.csv(encoding='UTF-8', header=TRUE)
return (datosCSV[datosCSV$Servicio == servicio,] %>% as.numeric() %>% tail(n=-2))
}
datos <- sapply(2017:2019, leerCSV) %>% unlist() %>% melt()
colnames(datos) <- 'atenciones'
atenciones <- ts(datos, frequency=52, start=2017)
autoplot(atenciones[,'atenciones']) +
ggtitle('Atenciones de urgencia por enfermedades respiratorias') +
ylab('Atenciones') +
xlab('Semanas')
ggseasonplot(atenciones, year.labels=TRUE, year.labels.left=TRUE) +
ggtitle('Gráfico estacional: atenciones de urgencia en {servicio}' %>% glue()) +
ylab('Atenciones')
servicio <- if(length(args) == 0) 'Metropolitano Oriente' else args[2]
semanasHorizonte <- 12
leerCSV <- function(periodo) {
datosCSV = '../scrapes/datos_{periodo}.csv'  %>% glue() %>% read.csv(encoding='UTF-8', header=TRUE)
return (datosCSV[datosCSV$Servicio == servicio,] %>% as.numeric() %>% tail(n=-2))
}
datos <- sapply(2017:2019, leerCSV) %>% unlist() %>% melt()
colnames(datos) <- 'atenciones'
atenciones <- ts(datos, frequency=52, start=2017)
autoplot(atenciones[,'atenciones']) +
ggtitle('Atenciones de urgencia por enfermedades respiratorias') +
ylab('Atenciones') +
xlab('Semanas')
ggseasonplot(atenciones, year.labels=TRUE, year.labels.left=TRUE) +
ggtitle('Gráfico estacional: atenciones de urgencia en {servicio}' %>% glue()) +
ylab('Atenciones')
gglagplot(atenciones, set.lags=c(13,26,39,52)) +
ggtitle('Lag plot: atenciones de urgencia en {servicio}' %>% glue()) +
ylab('Atenciones')
arimaFit <- atenciones %>% auto.arima(seasonal=TRUE, stepwise=FALSE, test='kpss')
pronostico <- arimaFit %>% forecast(h=semanasHorizonte)
autoplot(pronostico)
